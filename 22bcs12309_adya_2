CREATE TABLE Student (
     StudentID INT PRIMARY KEY,
     Name VARCHAR(100),
     Department VARCHAR(100),
     Marks DOUBLE
 );
 
 public class Student {
     private int studentID;
     private String name;
     private String department;
     private double marks;
 
     public Student(int studentID, String name, String department, double marks) {
         this.studentID = studentID;
         this.name = name;
         this.department = department;
         this.marks = marks;
     }
 
     public int getStudentID() { return studentID; }
     public String getName() { return name; }
     public String getDepartment() { return department; }
     public double getMarks() { return marks; }
 
     public void setName(String name) { this.name = name; }
     public void setDepartment(String department) { this.department = department; }
     public void setMarks(double marks) { this.marks = marks; }
 }
 
 
 import java.sql.*;
 import java.util.*;
 
 public class StudentController {
     private final Connection conn;
 
     public StudentController() throws SQLException {
         conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/your_database", "your_user", "your_pass");
     }
 
     public void addStudent(Student s) throws SQLException {
         String query = "INSERT INTO Student VALUES (?, ?, ?, ?)";
         try (PreparedStatement ps = conn.prepareStatement(query)) {
             ps.setInt(1, s.getStudentID());
             ps.setString(2, s.getName());
             ps.setString(3, s.getDepartment());
             ps.setDouble(4, s.getMarks());
             ps.executeUpdate();
}
     }
 
     public List<Student> getAllStudents() throws SQLException {
         List<Student> list = new ArrayList<>();
         try (Statement stmt = conn.createStatement();
              ResultSet rs = stmt.executeQuery("SELECT * FROM Student")) {
             while (rs.next()) {
                 Student s = new Student(
                         rs.getInt("StudentID"),
                         rs.getString("Name"),
                         rs.getString("Department"),
                         rs.getDouble("Marks")
                 );
                 list.add(s);
             }
         }
         return list;
     }
 
     public void updateStudentMarks(int id, double newMarks) throws SQLException {
         String query = "UPDATE Student SET Marks = ? WHERE StudentID = ?";
         try (PreparedStatement ps = conn.prepareStatement(query)) {
             ps.setDouble(1, newMarks);
             ps.setInt(2, id);
             ps.executeUpdate();
         }
     }
 
     public void deleteStudent(int id) throws SQLException {
         String query = "DELETE FROM Student WHERE StudentID = ?";
         try (PreparedStatement ps = conn.prepareStatement(query)) {
             ps.setInt(1, id);
             ps.executeUpdate();
         }
     }
 }
 
 
 import java.util.*;
 
 public class StudentView {
     public static void main(String[] args) {
         Scanner sc = new Scanner(System.in);
 
         try {
             StudentController controller = new StudentController();
 
             while (true) {
                 System.out.println("\n===== Student Management Menu =====");
                 System.out.println("1. Add Student");
                 System.out.println("2. View All Students");
                 System.out.println("3. Update Student Marks");
                 System.out.println("4. Delete Student");
                 System.out.println("5. Exit");
                 System.out.print("Enter your choice: ");
                 int choice = sc.nextInt();
 
                 switch (choice) {
                     case 1 -> {
                         System.out.print("Student ID: ");
                         int id = sc.nextInt();
                         sc.nextLine();  // clear buffer
                         System.out.print("Name: ");
                         String name = sc.nextLine();
                         System.out.print("Department: ");
                         String dept = sc.nextLine();
                         System.out.print("Marks: ");
                         double marks = sc.nextDouble();
                         Student s = new Student(id, name, dept, marks);
                         controller.addStudent(s);
                         System.out.println("Student added.");
                     }
                     case 2 -> {
                         List<Student> students = controller.getAllStudents();
                         System.out.println("\n--- Student List ---");
                         for (Student s : students) {
                             System.out.println("ID: " + s.getStudentID() + ", Name: " + s.getName() +
                                                ", Dept: " + s.getDepartment() + ", Marks: " + s.getMarks());
                         }
                     }
                     case 3 -> {
                         System.out.print("Student ID to update: ");
                         int id = sc.nextInt();
                         System.out.print("New Marks: ");
                         double newMarks = sc.nextDouble();
                         controller.updateStudentMarks(id, newMarks);
                         System.out.println("Marks updated.");
                     }
                     case 4 -> {
                         System.out.print("Student ID to delete: ");
                         int id = sc.nextInt();
                         controller.deleteStudent(id);
                         System.out.println("Student deleted.");
                     }
                     case 5 -> {
                         System.out.println("Exiting...");
                         return;
                     }
                     default -> System.out.println("Invalid option.");
                 }
             }
 
         } catch (Exception e) {
             e.printStackTrace();
         }
     }
 }
